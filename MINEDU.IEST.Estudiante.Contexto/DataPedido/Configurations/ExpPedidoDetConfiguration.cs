// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using IDCL.AVGUST.SIP.Entity.Pedido;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

#nullable disable

namespace IDCL.AVGUST.SIP.Contexto.DataPedido.Configurations
{
    public partial class ExpPedidoDetConfiguration : IEntityTypeConfiguration<PedidoDet>
    {
        public void Configure(EntityTypeBuilder<PedidoDet> entity)
        {
            entity.HasKey(e => new { e.IdPedido, e.IdEmpresa, e.IdLocal, e.IdItem });
            entity.ToTable("exp_PedidoDet");
            entity.Property(e => e.IdPedido).HasColumnName("idPedido");
            entity.Property(e => e.IdEmpresa).HasColumnName("idEmpresa");
            entity.Property(e => e.IdLocal).HasColumnName("idLocal");
            entity.Property(e => e.IdItem).HasColumnName("idItem");
            entity.Property(e => e.Cantidad).HasColumnType("decimal(16, 4)");
            entity.Property(e => e.CantidadAtender).HasColumnType("decimal(16, 4)");
            entity.Property(e => e.CantidadFinal).HasColumnType("decimal(16, 4)");
            entity.Property(e => e.CantidadNoAtendida).HasColumnType("decimal(16, 4)");
            entity.Property(e => e.CantidadUmedida).HasColumnType("decimal(16, 4)").HasColumnName("CantidadUMedida");
            entity.Property(e => e.Capacidad).HasColumnType("decimal(10, 3)");
            entity.Property(e => e.ChkPromo).HasColumnName("chkPromo");
            entity.Property(e => e.Contenido).HasColumnType("decimal(10, 3)");
            entity.Property(e => e.ContenidoUmedida).HasColumnType("decimal(16, 4)").HasColumnName("ContenidoUMedida");
            entity.Property(e => e.Dscto1).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.Dscto2).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.Dscto3).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.FechaModificacion).HasColumnType("smalldatetime");
            entity.Property(e => e.FechaRegistro).HasColumnType("smalldatetime");
            entity.Property(e => e.FlgAfectacionIgv).HasColumnName("flgAfectacionIgv");
            entity.Property(e => e.FlgIgv).HasColumnName("flgIgv").HasDefaultValueSql("((0))");
            entity.Property(e => e.IdAlmacen).HasColumnName("idAlmacen");
            entity.Property(e => e.IdArticulo).HasColumnName("idArticulo").HasComment("id Articulo");
            entity.Property(e => e.IdCalibre).HasColumnName("idCalibre");
            entity.Property(e => e.IdCategoria).HasColumnName("idCategoria");
            entity.Property(e => e.IdMarca).HasColumnName("idMarca");
            entity.Property(e => e.IdPresentacion).HasColumnName("idPresentacion").HasComment("id de Presentacion");
            entity.Property(e => e.IdTipoArticulo).HasColumnName("idTipoArticulo").HasComment("Servicio,Producto Terminado o Mercaderia");
            entity.Property(e => e.IdTipoMedida).HasColumnName("idTipoMedida");
            entity.Property(e => e.IdTipoPrecio).HasColumnName("idTipoPrecio").HasComment("FOB");
            entity.Property(e => e.IdUmedida).HasColumnName("idUMedida");
            entity.Property(e => e.Igv).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.IndArticuloNuevo).HasColumnName("indArticuloNuevo");
            entity.Property(e => e.IndCalculo).HasColumnName("indCalculo");
            entity.Property(e => e.IndDetraccion).HasColumnName("indDetraccion");
            entity.Property(e => e.IndDistribuirLote).HasColumnName("indDistribuirLote");
            entity.Property(e => e.IndNoAtender).HasColumnName("indNoAtender");
            entity.Property(e => e.IndPrecioPromocional).HasColumnName("indPrecioPromocional");
            entity.Property(e => e.IndPrecioUnit).HasColumnName("indPrecioUnit");
            entity.Property(e => e.IndRptaStock).HasColumnName("indRptaStock");
            entity.Property(e => e.IndSinStock).HasColumnName("indSinStock");
            entity.Property(e => e.IndUmedida).HasColumnName("indUMedida");
            entity.Property(e => e.Isc).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.ItemPrecio).HasColumnName("itemPrecio");
            entity.Property(e => e.Lote).HasMaxLength(40).IsUnicode(false);
            entity.Property(e => e.NomArticulo).HasMaxLength(250).IsUnicode(false).HasColumnName("nomArticulo");
            entity.Property(e => e.NroOt).HasMaxLength(20).IsUnicode(false).HasColumnName("nroOt");
            entity.Property(e => e.ObsNoAtender).HasMaxLength(200).IsUnicode(false);
            entity.Property(e => e.PorDscto1).HasColumnType("decimal(9, 6)").HasColumnName("porDscto1");
            entity.Property(e => e.PorDscto2).HasColumnType("decimal(9, 6)").HasColumnName("porDscto2");
            entity.Property(e => e.PorDscto3).HasColumnType("decimal(9, 6)").HasColumnName("porDscto3");
            entity.Property(e => e.PorIgv).HasColumnType("decimal(5, 2)").HasColumnName("porIgv");
            entity.Property(e => e.PorIsc).HasColumnType("decimal(5, 2)").HasColumnName("porIsc");
            entity.Property(e => e.PrecioConImpuesto).HasColumnType("decimal(16, 5)");
            entity.Property(e => e.PrecioUnitIni).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.PrecioUnitPromocional).HasColumnType("decimal(16, 7)");
            entity.Property(e => e.PrecioUnitario).HasColumnType("decimal(16, 5)");
            entity.Property(e => e.Stock).HasColumnType("decimal(18, 4)");
            entity.Property(e => e.SubTotal).HasColumnType("decimal(12, 2)").HasColumnName("subTotal");
            entity.Property(e => e.TasaDetraccion).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.TipArticulo).HasMaxLength(2).IsUnicode(false).HasColumnName("tipArticulo");
            entity.Property(e => e.TipDetraccion).HasMaxLength(3).IsUnicode(false).HasColumnName("tipDetraccion");
            entity.Property(e => e.TipoAfectacionIgv).HasMaxLength(2).IsUnicode(false);
            entity.Property(e => e.TipoImpSelectivo).HasMaxLength(1).IsUnicode(false).IsFixedLength();
            entity.Property(e => e.Total).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.UsuarioModificacion).HasMaxLength(30).IsUnicode(false);
            entity.Property(e => e.UsuarioRegistro).HasMaxLength(30).IsUnicode(false);
            entity.HasOne(d => d.PedidoCab)
                .WithMany(p => p.PedidoDets)
                .HasForeignKey(d => new { d.IdPedido, d.IdEmpresa, d.IdLocal })
                .HasConstraintName("FK_exp_PedidoDet_exp_PedidoCab");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<PedidoDet> entity);
    }
}
